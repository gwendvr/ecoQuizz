import React, { useState, useRef } from 'react';
import html2canvas from 'html2canvas';
import './App.css';

interface Question {
  id: number;
  question: string;
  options: string[];
  correctAnswer: number;
  explanation: string;
  category: string;
  ecoFact?: string;
  co2Emission: number;
  type: 'qcm' | 'rebus';
  emojis?: string[]; // Pour les r√©bus avec emojis
}

interface Badge {
  name: string;
  emoji: string;
  message: string;
  minScore: number;
  maxScore: number;
}

interface Avatar {
  id: string;
  emoji: string;
  name: string;
}

interface UnlockedFact {
  id: number;
  category: string;
  fact: string;
  date: Date;
}

const badges: Badge[] = [
  {
    name: "Graine verte",
    emoji: "üå±",
    message: "Tu d√©butes, chaque geste compte !",
    minScore: 0,
    maxScore: 2
  },
  {
    name: "√âcolo √©clair√©",
    emoji: "üçÉ",
    message: "Tu es sur la bonne voie !",
    minScore: 3,
    maxScore: 5
  },
  {
    name: "H√©ros du climat",
    emoji: "üåç",
    message: "Tu inspires les autres !",
    minScore: 6,
    maxScore: 7
  }
];

const avatars: Avatar[] = [
  { id: "panda", emoji: "üêº", name: "Panda √âcolo" },
  { id: "plant", emoji: "üåø", name: "Plante Verte" },
  { id: "cloud", emoji: "‚òÅÔ∏è", name: "Nuage Souriant" }
];

const categories = [
  { name: '√ânergie', color: '#FFA726' },
  { name: 'Eau', color: '#29B6F6' },
  { name: 'D√©chets', color: '#66BB6A' },
  { name: 'Transport', color: '#EC407A' },
  { name: 'Alimentation', color: '#7E57C2' },
  { name: 'R√©bus', color: '#9C27B0' }
];

const allQuestions: Question[] = [
  // Cat√©gorie : √ânergie (30 questions)
  {
    id: 1,
    type: 'qcm',
    category: "√ânergie",
    question: "Quelle est la principale source d'√©nergie renouvelable en France ?",
    options: ["L'√©nergie hydraulique", "L'√©nergie solaire", "L'√©nergie √©olienne"],
    correctAnswer: 0,
    explanation: "L'√©nergie hydraulique est la principale source d'√©nergie renouvelable en France, gr√¢ce √† ses nombreux barrages.",
    ecoFact: "Un t√©l√©phone contient jusqu'√† 30 m√©taux rares.",
    co2Emission: 0.5
  },
  {
    id: 2,
    type: 'qcm',
    category: "√ânergie",
    question: "Quel est le principal avantage des ampoules LED ?",
    options: [
      "Une consommation d'√©nergie r√©duite",
      "Un prix plus bas",
      "Une dur√©e de vie plus courte"
    ],
    correctAnswer: 0,
    explanation: "Les ampoules LED consomment jusqu'√† 90% moins d'√©nergie que les ampoules traditionnelles.",
    ecoFact: "Une ampoule LED peut durer jusqu'√† 25 fois plus longtemps qu'une ampoule classique !",
    co2Emission: 0.2
  },
  {
    id: 3,
    type: 'qcm',
    category: "√ânergie",
    question: "Quelle est la meilleure fa√ßon de r√©duire sa consommation d'√©lectricit√© ?",
    options: [
      "√âteindre les appareils en veille",
      "Utiliser des multiprises",
      "Laisser les lumi√®res allum√©es"
    ],
    correctAnswer: 0,
    explanation: "Les appareils en veille consomment jusqu'√† 10% de l'√©lectricit√© d'un foyer.",
    ecoFact: "Un ordinateur en veille consomme autant d'√©lectricit√© qu'une ampoule allum√©e !",
    co2Emission: 0.05
  },
  {
    id: 4,
    type: 'qcm',
    category: "√ânergie",
    question: "Quel est le principal avantage des √©nergies renouvelables ?",
    options: [
      "Elles sont in√©puisables",
      "Elles sont moins ch√®res",
      "Elles sont plus faciles √† installer"
    ],
    correctAnswer: 0,
    explanation: "Les √©nergies renouvelables sont in√©puisables et ne produisent pas de gaz √† effet de serre.",
    ecoFact: "En 2020, les √©nergies renouvelables ont repr√©sent√© 26% de la production mondiale d'√©lectricit√© !",
    co2Emission: 0.3
  },
  {
    id: 5,
    type: 'qcm',
    category: "√ânergie",
    question: "Quel est le principal avantage des √©nergies solaires ?",
    options: [
      "Une source d'√©nergie in√©puisable",
      "Un co√ªt d'installation bas",
      "Une production constante"
    ],
    correctAnswer: 0,
    explanation: "L'√©nergie solaire est une source d'√©nergie in√©puisable et ne produit pas de gaz √† effet de serre.",
    ecoFact: "En une heure, le soleil fournit √† la Terre plus d'√©nergie que l'humanit√© n'en consomme en une ann√©e !",
    co2Emission: 0.1
  },
  {
    id: 26,
    type: 'qcm',
    category: "√ânergie",
    question: "Quelle est la dur√©e de vie moyenne d'une √©olienne ?",
    options: ["20-25 ans", "10-15 ans", "30-35 ans"],
    correctAnswer: 0,
    explanation: "Une √©olienne a une dur√©e de vie moyenne de 20 √† 25 ans.",
    ecoFact: "Une √©olienne peut alimenter jusqu'√† 2000 foyers en √©lectricit√© !",
    co2Emission: 0.3
  },
  {
    id: 27,
    type: 'qcm',
    category: "√ânergie",
    question: "Quel est le principal avantage des panneaux solaires ?",
    options: ["√ânergie gratuite et renouvelable", "Installation facile", "Entretien minimal"],
    correctAnswer: 0,
    explanation: "Les panneaux solaires produisent une √©nergie gratuite et renouvelable.",
    ecoFact: "Un panneau solaire peut produire de l'√©lectricit√© pendant plus de 25 ans !",
    co2Emission: 0.2
  },
  {
    id: 28,
    type: 'qcm',
    category: "√ânergie",
    question: "Quelle est la part des √©nergies renouvelables dans la consommation d'√©lectricit√© en France ?",
    options: ["20%", "10%", "30%"],
    correctAnswer: 0,
    explanation: "Les √©nergies renouvelables repr√©sentent environ 20% de la consommation d'√©lectricit√© en France.",
    ecoFact: "La France vise 40% d'√©nergies renouvelables d'ici 2030 !",
    co2Emission: 0.3
  },
  {
    id: 29,
    type: 'qcm',
    category: "√ânergie",
    question: "Quel est le principal avantage de la g√©othermie ?",
    options: ["√ânergie constante et stable", "Co√ªt d'installation bas", "Production maximale en √©t√©"],
    correctAnswer: 0,
    explanation: "La g√©othermie fournit une √©nergie constante et stable, ind√©pendante des conditions m√©t√©orologiques.",
    ecoFact: "La g√©othermie peut chauffer jusqu'√† 2 millions de foyers en France !",
    co2Emission: 0.2
  },
  // Cat√©gorie : Eau (30 questions)
  {
    id: 56,
    type: 'qcm',
    category: "Eau",
    question: "Quelle est la consommation moyenne d'eau par personne et par jour en France ?",
    options: ["150 litres", "50 litres", "300 litres"],
    correctAnswer: 0,
    explanation: "Un Fran√ßais consomme en moyenne 150 litres d'eau par jour.",
    ecoFact: "Un bain consomme environ 150 litres d'eau, contre 60 litres pour une douche de 5 minutes !",
    co2Emission: 0.005
  },
  {
    id: 6,
    type: 'qcm',
    category: "Eau",
    question: "Quel pourcentage de l'eau sur Terre est de l'eau douce ?",
    options: [
      "2,5%",
      "10%",
      "25%"
    ],
    correctAnswer: 0,
    explanation: "Seulement 2,5% de l'eau sur Terre est de l'eau douce, dont une grande partie est inaccessible (glaciers, neige).",
    ecoFact: "Un robinet qui goutte peut gaspiller jusqu'√† 120 litres d'eau par jour !",
    co2Emission: 0.005
  },
  {
    id: 7,
    type: 'qcm',
    category: "Eau",
    question: "Quelle est la meilleure fa√ßon de r√©duire sa consommation d'eau ?",
    options: [
      "Prendre des douches courtes",
      "Laver sa voiture r√©guli√®rement",
      "Arroser son jardin en plein soleil"
    ],
    correctAnswer: 0,
    explanation: "Prendre des douches courtes permet d'√©conomiser jusqu'√† 100 litres d'eau par rapport √† un bain.",
    ecoFact: "Un bain consomme environ 150 litres d'eau, contre 60 litres pour une douche de 5 minutes !",
    co2Emission: 0.005
  },
  {
    id: 8,
    type: 'qcm',
    category: "Eau",
    question: "Quelle est la meilleure fa√ßon de r√©duire sa consommation d'eau chaude ?",
    options: [
      "Installer un mitigeur",
      "Prendre des bains",
      "Laisser couler l'eau chaude"
    ],
    correctAnswer: 0,
    explanation: "Un mitigeur permet de r√©guler la temp√©rature de l'eau et d'√©conomiser jusqu'√† 30% d'eau chaude.",
    ecoFact: "Chauffer l'eau repr√©sente environ 15% de la consommation d'√©nergie d'un foyer !",
    co2Emission: 0.005
  },
  {
    id: 57,
    type: 'qcm',
    category: "Eau",
    question: "Quelle est la meilleure p√©riode pour arroser son jardin ?",
    options: ["Le soir", "Le midi", "Le matin"],
    correctAnswer: 0,
    explanation: "L'arrosage le soir permet d'√©viter l'√©vaporation et d'optimiser l'absorption par les plantes.",
    ecoFact: "L'arrosage le soir permet d'√©conomiser jusqu'√† 50% d'eau !",
    co2Emission: 0.005
  },
  {
    id: 58,
    type: 'qcm',
    category: "Eau",
    question: "Quel est le principal polluant des eaux douces en France ?",
    options: ["Les pesticides", "Les d√©chets plastiques", "Les m√©taux lourds"],
    correctAnswer: 0,
    explanation: "Les pesticides sont le principal polluant des eaux douces en France.",
    ecoFact: "Un seul gramme de pesticide peut polluer 10 000 litres d'eau !",
    co2Emission: 0.005
  },
  // Cat√©gorie : D√©chets (30 questions)
  {
    id: 86,
    type: 'qcm',
    category: "D√©chets",
    question: "Combien de temps met un m√©got de cigarette √† se d√©grader ?",
    options: ["1-2 ans", "6 mois", "5 ans"],
    correctAnswer: 0,
    explanation: "Un m√©got de cigarette met 1 √† 2 ans √† se d√©grader dans la nature.",
    ecoFact: "Un seul m√©got peut polluer jusqu'√† 500 litres d'eau !",
    co2Emission: 0.005
  },
  {
    id: 9,
    type: 'qcm',
    category: "D√©chets",
    question: "Quelle est la dur√©e de vie moyenne d'un sac en plastique ?",
    options: [
      "450 ans",
      "2 ans",
      "6 mois"
    ],
    correctAnswer: 0,
    explanation: "Un sac en plastique met environ 450 ans √† se d√©grader dans la nature.",
    ecoFact: "Chaque ann√©e, environ 8 millions de tonnes de plastique finissent dans les oc√©ans !",
    co2Emission: 0.005
  },
  {
    id: 10,
    type: 'qcm',
    category: "D√©chets",
    question: "Quelle est la meilleure fa√ßon de r√©duire ses d√©chets ?",
    options: [
      "Le compostage",
      "L'incin√©ration",
      "La mise en d√©charge"
    ],
    correctAnswer: 0,
    explanation: "Le compostage permet de recycler les d√©chets organiques en engrais naturel.",
    ecoFact: "Les d√©chets organiques repr√©sentent environ 30% de nos poubelles !",
    co2Emission: 0.005
  },
  {
    id: 11,
    type: 'qcm',
    category: "D√©chets",
    question: "Quelle est la meilleure fa√ßon de r√©duire sa consommation de papier ?",
    options: [
      "Utiliser le recto-verso",
      "Utiliser plus de papier",
      "Jeter le papier directement"
    ],
    correctAnswer: 0,
    explanation: "L'impression recto-verso permet de r√©duire de moiti√© la consommation de papier.",
    ecoFact: "Pour produire une tonne de papier, il faut 17 arbres et 26 000 litres d'eau !",
    co2Emission: 0.005
  },
  {
    id: 87,
    type: 'qcm',
    category: "D√©chets",
    question: "Quelle est la dur√©e de vie d'une bouteille en plastique ?",
    options: ["450 ans", "100 ans", "50 ans"],
    correctAnswer: 0,
    explanation: "Une bouteille en plastique met environ 450 ans √† se d√©grader dans la nature.",
    ecoFact: "Chaque minute, 1 million de bouteilles en plastique sont vendues dans le monde !",
    co2Emission: 0.005
  },
  {
    id: 88,
    type: 'qcm',
    category: "D√©chets",
    question: "Quel est le taux de recyclage du verre en France ?",
    options: ["75%", "50%", "90%"],
    correctAnswer: 0,
    explanation: "Le taux de recyclage du verre en France est d'environ 75%.",
    ecoFact: "Recycler une tonne de verre permet d'√©conomiser 660 kg de sable !",
    co2Emission: 0.005
  },
  // Cat√©gorie : Transport (30 questions)
  {
    id: 116,
    type: 'qcm',
    category: "Transport",
    question: "Quelle est la distance moyenne parcourue en voiture par un Fran√ßais chaque jour ?",
    options: ["30 km", "15 km", "45 km"],
    correctAnswer: 0,
    explanation: "Un Fran√ßais parcourt en moyenne 30 km par jour en voiture.",
    ecoFact: "Le transport est responsable de 30% des √©missions de CO2 en France !",
    co2Emission: 0.5
  },
  {
    id: 12,
    type: 'qcm',
    category: "Transport",
    question: "Quel est le mode de transport le plus √©cologique pour les trajets courts ?",
    options: [
      "Le v√©lo",
      "La voiture √©lectrique",
      "Le bus"
    ],
    correctAnswer: 0,
    explanation: "Le v√©lo est le mode de transport le plus √©cologique car il ne produit aucune √©mission et est bon pour la sant√©.",
    ecoFact: "Un trajet de 5 km en voiture √©met environ 1 kg de CO2, contre 0 kg en v√©lo !",
    co2Emission: 0.005
  },
  {
    id: 13,
    type: 'qcm',
    category: "Transport",
    question: "Quel est le principal avantage du covoiturage ?",
    options: [
      "La r√©duction des √©missions de CO2",
      "La r√©duction des embouteillages",
      "La r√©duction des accidents"
    ],
    correctAnswer: 0,
    explanation: "Le covoiturage permet de r√©duire significativement les √©missions de CO2 par personne.",
    ecoFact: "Un trajet en covoiturage avec 3 personnes divise par 3 les √©missions de CO2 par passager !",
    co2Emission: 0.005
  },
  {
    id: 14,
    type: 'qcm',
    category: "Transport",
    question: "Quel est le principal avantage des transports en commun ?",
    options: [
      "La r√©duction des √©missions de CO2",
      "La r√©duction des embouteillages",
      "La r√©duction des accidents"
    ],
    correctAnswer: 0,
    explanation: "Les transports en commun permettent de r√©duire significativement les √©missions de CO2 par personne.",
    ecoFact: "Un bus rempli peut remplacer jusqu'√† 40 voitures sur la route !",
    co2Emission: 0.005
  },
  {
    id: 117,
    type: 'qcm',
    category: "Transport",
    question: "Quelle est la distance moyenne d'un trajet domicile-travail en France ?",
    options: ["26 km", "15 km", "40 km"],
    correctAnswer: 0,
    explanation: "La distance moyenne d'un trajet domicile-travail en France est de 26 km.",
    ecoFact: "Le t√©l√©travail pourrait r√©duire les √©missions de CO2 de 30% !",
    co2Emission: 0.5
  },
  {
    id: 118,
    type: 'qcm',
    category: "Transport",
    question: "Quel est le mode de transport le plus utilis√© pour les trajets domicile-travail ?",
    options: ["La voiture", "Les transports en commun", "Le v√©lo"],
    correctAnswer: 0,
    explanation: "La voiture reste le mode de transport le plus utilis√© pour les trajets domicile-travail.",
    ecoFact: "Un trajet en voiture sur 3 fait moins de 3 km !",
    co2Emission: 0.5
  },
  // Cat√©gorie : Alimentation (30 questions)
  {
    id: 146,
    type: 'qcm',
    category: "Alimentation",
    question: "Quelle est la part des √©missions de CO2 li√©es √† l'alimentation en France ?",
    options: ["25%", "10%", "40%"],
    correctAnswer: 0,
    explanation: "L'alimentation repr√©sente 25% des √©missions de CO2 en France.",
    ecoFact: "Un repas v√©g√©tarien √©met 2 √† 3 fois moins de CO2 qu'un repas avec de la viande !",
    co2Emission: 0.5
  },
  {
    id: 15,
    type: 'qcm',
    category: "Alimentation",
    question: "Quelle est la meilleure fa√ßon de r√©duire son empreinte carbone alimentaire ?",
    options: [
      "Manger local et de saison",
      "Manger des produits import√©s",
      "Manger des plats pr√©par√©s"
    ],
    correctAnswer: 0,
    explanation: "Manger local et de saison r√©duit les √©missions li√©es au transport et √† la conservation des aliments.",
    ecoFact: "Un fruit import√© par avion √©met 10 √† 20 fois plus de CO2 qu'un fruit local !",
    co2Emission: 0.005
  },
  {
    id: 16,
    type: 'qcm',
    category: "Alimentation",
    question: "Quelle est la meilleure fa√ßon de r√©duire sa consommation de viande ?",
    options: [
      "Adopter le flexitarisme",
      "Manger plus de viande rouge",
      "Manger plus de viande transform√©e"
    ],
    correctAnswer: 0,
    explanation: "Le flexitarisme permet de r√©duire son impact environnemental tout en gardant une alimentation √©quilibr√©e.",
    ecoFact: "La production d'un kilo de b≈ìuf √©met autant de CO2 qu'un trajet de 60 km en voiture !",
    co2Emission: 0.005
  },
  {
    id: 17,
    type: 'qcm',
    category: "Alimentation",
    question: "Quelle est la meilleure fa√ßon de conserver les aliments ?",
    options: [
      "Utiliser des contenants r√©utilisables",
      "Utiliser du film plastique",
      "Utiliser des sacs en plastique"
    ],
    correctAnswer: 0,
    explanation: "Les contenants r√©utilisables sont plus √©cologiques que les emballages jetables.",
    ecoFact: "En France, chaque personne jette en moyenne 20 kg d'emballages alimentaires par an !",
    co2Emission: 0.005
  },
  {
    id: 147,
    type: 'qcm',
    category: "Alimentation",
    question: "Quelle est la part du gaspillage alimentaire dans les d√©chets m√©nagers ?",
    options: ["30%", "10%", "50%"],
    correctAnswer: 0,
    explanation: "Le gaspillage alimentaire repr√©sente environ 30% des d√©chets m√©nagers.",
    ecoFact: "Chaque Fran√ßais jette en moyenne 20 kg de nourriture par an !",
    co2Emission: 0.5
  },
  {
    id: 148,
    type: 'qcm',
    category: "Alimentation",
    question: "Quelle est la meilleure fa√ßon de conserver les fruits et l√©gumes ?",
    options: ["Dans un endroit frais et sec", "Au r√©frig√©rateur", "√Ä temp√©rature ambiante"],
    correctAnswer: 0,
    explanation: "Les fruits et l√©gumes se conservent mieux dans un endroit frais et sec.",
    ecoFact: "Les fruits et l√©gumes de saison sont 2 √† 3 fois moins chers !",
    co2Emission: 0.005
  },
  // Cat√©gorie : R√©bus (30 questions)
  {
    id: 176,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel concept √©cologique est repr√©sent√© par ces emojis ?",
    options: ["√âconomie circulaire", "D√©veloppement durable", "Biodiversit√©"],
    correctAnswer: 0,
    explanation: "L'√©conomie circulaire vise √† r√©duire les d√©chets et la consommation de ressources !",
    ecoFact: "L'√©conomie circulaire pourrait cr√©er 300 000 emplois en France d'ici 2030 !",
    co2Emission: 0.005,
    emojis: ["‚ôªÔ∏è", "üîÑ", "üåç"]
  },
  {
    id: 18,
    type: 'rebus',
    category: "R√©bus",
    question: "Quelle source d'√©nergie est repr√©sent√©e par ces emojis ?",
    options: ["√ânergie solaire", "√ânergie √©olienne", "√ânergie hydraulique"],
    correctAnswer: 0,
    explanation: "Le soleil est une source d'√©nergie renouvelable et in√©puisable !",
    ecoFact: "En une heure, le soleil fournit √† la Terre plus d'√©nergie que l'humanit√© n'en consomme en une ann√©e !",
    co2Emission: 0.1,
    emojis: ["‚òÄÔ∏è", "‚ö°"]
  },
  {
    id: 19,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel geste √©cologique est repr√©sent√© par ces emojis ?",
    options: ["√âconomiser l'eau", "Nettoyer l'eau", "Stocker l'eau"],
    correctAnswer: 0,
    explanation: "√âconomiser l'eau est essentiel pour pr√©server cette ressource pr√©cieuse !",
    ecoFact: "Un robinet qui goutte peut gaspiller jusqu'√† 120 litres d'eau par jour !",
    co2Emission: 0.005,
    emojis: ["üíß", "üö∞"]
  },
  {
    id: 20,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel concept √©cologique est repr√©sent√© par ces emojis ?",
    options: ["Recyclage", "Compostage", "Incin√©ration"],
    correctAnswer: 0,
    explanation: "Le recyclage permet de donner une seconde vie aux mat√©riaux !",
    ecoFact: "Recycler une tonne de papier permet d'√©conomiser 17 arbres !",
    co2Emission: 0.005,
    emojis: ["‚ôªÔ∏è", "üîÑ"]
  },
  {
    id: 21,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel mode de transport est repr√©sent√© par ces emojis ?",
    options: ["V√©lo √©lectrique", "Voiture √©lectrique", "Scooter √©lectrique"],
    correctAnswer: 0,
    explanation: "Le v√©lo √©lectrique est un excellent compromis entre effort et √©cologie !",
    ecoFact: "Un v√©lo √©lectrique √©met 10 fois moins de CO2 qu'une voiture !",
    co2Emission: 0.005,
    emojis: ["üö≤", "‚ö°"]
  },
  {
    id: 22,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel concept alimentaire est repr√©sent√© par ces emojis ?",
    options: ["Agriculture biologique", "Agriculture intensive", "Agriculture locale"],
    correctAnswer: 0,
    explanation: "L'agriculture biologique respecte l'environnement et la biodiversit√© !",
    ecoFact: "Les produits bio contiennent en moyenne 30% d'antioxydants en plus !",
    co2Emission: 0.005,
    emojis: ["üå±", "üöú"]
  },
  {
    id: 23,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel geste √©cologique est repr√©sent√© par ces emojis ?",
    options: ["Composter", "Recycler", "R√©utiliser"],
    correctAnswer: 0,
    explanation: "Le compostage permet de transformer les d√©chets organiques en engrais naturel !",
    ecoFact: "30% de nos d√©chets m√©nagers peuvent √™tre compost√©s !",
    co2Emission: 0.005,
    emojis: ["üçé", "üåç"]
  },
  {
    id: 24,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel mode de transport est repr√©sent√© par ces emojis ?",
    options: ["Covoiturage", "Autopartage", "Location"],
    correctAnswer: 0,
    explanation: "Le covoiturage permet de r√©duire les √©missions de CO2 et les embouteillages !",
    ecoFact: "Un trajet en covoiturage avec 3 personnes divise par 3 les √©missions de CO2 par passager !",
    co2Emission: 0.005,
    emojis: ["üöó", "üë•"]
  },
  {
    id: 25,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel concept √©cologique est repr√©sent√© par ces emojis ?",
    options: ["√ânergie renouvelable", "√ânergie fossile", "√ânergie nucl√©aire"],
    correctAnswer: 0,
    explanation: "Les √©nergies renouvelables sont in√©puisables et respectueuses de l'environnement !",
    ecoFact: "En 2020, les √©nergies renouvelables ont repr√©sent√© 26% de la production mondiale d'√©lectricit√© !",
    co2Emission: 0.005,
    emojis: ["üí®", "‚òÄÔ∏è"]
  },
  {
    id: 177,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel concept √©cologique est repr√©sent√© par ces emojis ?",
    options: ["Z√©ro d√©chet", "Recyclage", "Compostage"],
    correctAnswer: 0,
    explanation: "Le z√©ro d√©chet vise √† r√©duire au maximum la production de d√©chets !",
    ecoFact: "Un Fran√ßais produit en moyenne 500 kg de d√©chets par an !",
    co2Emission: 0.005,
    emojis: ["üö´", "üóëÔ∏è", "‚ôªÔ∏è"]
  },
  {
    id: 178,
    type: 'rebus',
    category: "R√©bus",
    question: "Quel mode de transport est repr√©sent√© par ces emojis ?",
    options: ["Tramway", "M√©tro", "Bus"],
    correctAnswer: 0,
    explanation: "Le tramway est un mode de transport √©cologique et efficace !",
    ecoFact: "Un tramway peut transporter jusqu'√† 300 passagers !",
    co2Emission: 0.005,
    emojis: ["üöä", "üå±", "‚ö°"]
  }
];

const App: React.FC = () => {
  const [selectedCategory, setSelectedCategory] = useState<string>("");
  const [questions, setQuestions] = useState<Question[]>([]);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);
  const [score, setScore] = useState(0);
  const [quizCompleted, setQuizCompleted] = useState(false);
  const [selectedAvatar, setSelectedAvatar] = useState<Avatar | null>(null);
  const [showAvatarSelection, setShowAvatarSelection] = useState(true);
  const [showEcoFact, setShowEcoFact] = useState(false);
  const [currentEcoFact, setCurrentEcoFact] = useState("");
  const [unlockedFacts, setUnlockedFacts] = useState<UnlockedFact[]>([]);
  const [showUnlockedFacts, setShowUnlockedFacts] = useState(false);
  const [showExplanation, setShowExplanation] = useState(false);
  const [currentExplanation, setCurrentExplanation] = useState("");
  const shareImageRef = useRef<HTMLDivElement>(null);
  const [totalCo2Emission, setTotalCo2Emission] = useState(0);
  const [backgroundColor, setBackgroundColor] = useState('#FFE0E0');
  const [completedCategories, setCompletedCategories] = useState<string[]>([]);

  const selectRandomQuestions = (category: string) => {
    const categoryQuestions = allQuestions.filter(q => q.category === category);
    const shuffled = [...categoryQuestions].sort(() => 0.5 - Math.random());
    return shuffled.slice(0, 5);
  };

  const handleCategorySelect = (category: string) => {
    setSelectedCategory(category);
    setQuestions(selectRandomQuestions(category));
    setCurrentQuestion(0);
    setSelectedAnswer(null);
    setScore(0);
    setQuizCompleted(false);
  };

  const handleAvatarSelect = (avatar: Avatar) => {
    setSelectedAvatar(avatar);
    setShowAvatarSelection(false);
  };

  const getCurrentBadge = () => {
    return badges.find(badge => score >= badge.minScore && score <= badge.maxScore) || badges[0];
  };

  const getBackgroundColor = (unlockedFactsCount: number, totalCategories: number) => {
    const percentage = (unlockedFactsCount / totalCategories) * 100;
    if (percentage <= 20) return '#FFE0E0'; // Rouge clair
    if (percentage <= 40) return '#FFD6A5'; // Orange clair
    if (percentage <= 60) return '#FDFFB6'; // Jaune clair
    if (percentage <= 80) return '#CAFFBF'; // Vert clair
    return '#9BF6FF'; // Vert vif
  };

  const handleAnswerSelect = (answerIndex: number) => {
    setSelectedAnswer(answerIndex);
    setShowExplanation(true);
    setCurrentExplanation(questions[currentQuestion].explanation);
    
    if (answerIndex === questions[currentQuestion].correctAnswer) {
      setScore(score + 1);
      setTotalCo2Emission(prev => prev + questions[currentQuestion].co2Emission);
    }
  };

  const isCategoryAccessible = (categoryName: string) => {
    // Toutes les cat√©gories sont accessibles sauf si elles sont d√©j√† compl√©t√©es
    return !completedCategories.includes(categoryName);
  };

  const handleNextQuestion = () => {
    setShowEcoFact(false);
    setShowExplanation(false);
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
      setSelectedAnswer(null);
    } else {
      if (score === questions.length) {
        const randomQuestion = questions[Math.floor(Math.random() * questions.length)];
        const newFact: UnlockedFact = {
          id: Date.now(),
          category: selectedCategory,
          fact: `F√©licitations ! Tu as ma√Ætris√© la cat√©gorie ${selectedCategory} ! Voici un fait √©colo : ${randomQuestion.ecoFact}`,
          date: new Date()
        };
        setUnlockedFacts(prev => {
          const newFacts = [...prev, newFact];
          setBackgroundColor(getBackgroundColor(newFacts.length, categories.length));
          return newFacts;
        });
        setCompletedCategories(prev => [...prev, selectedCategory]);
      }
      setQuizCompleted(true);
    }
  };

  const handleRestart = () => {
    setSelectedCategory("");
    setQuestions([]);
    setCurrentQuestion(0);
    setSelectedAnswer(null);
    setScore(0);
    setQuizCompleted(false);
    setShowAvatarSelection(false);
  };

  const generateShareImage = async () => {
    if (!shareImageRef.current) return;

    try {
      const canvas = await html2canvas(shareImageRef.current, {
        backgroundColor: '#ffffff',
        scale: 2,
      });
      
      const image = canvas.toDataURL('image/png');
      const link = document.createElement('a');
      link.download = 'eco-quiz-score.png';
      link.href = image;
      link.click();
    } catch (error) {
      console.error('Erreur lors de la g√©n√©ration de l\'image:', error);
      alert('Une erreur est survenue lors de la g√©n√©ration de l\'image.');
    }
  };

  const ShareImage: React.FC = () => {
    const badge = getCurrentBadge();
    
    return (
      <div ref={shareImageRef} className="share-image">
        <div className="share-header">
          <h2>√âco Quiz</h2>
          <p>Score : {score}/{questions.length}</p>
        </div>
        <div className="share-badge">
          <span className="badge-emoji">{badge.emoji}</span>
          <h3>{badge.name}</h3>
          <p>{badge.message}</p>
        </div>
        {selectedAvatar && (
          <div className="share-avatar">
            <span className="avatar-emoji">{selectedAvatar.emoji}</span>
            <p>{selectedAvatar.name}</p>
          </div>
        )}
        <div className="share-footer">
          <p>Joue aussi √† l'√âco Quiz ! üå±</p>
        </div>
      </div>
    );
  };

  const Navbar: React.FC = () => {
    if (!selectedAvatar) return null;
    
    return (
      <nav className="navbar">
        <div className="navbar-avatar">
          <span className="avatar-emoji">{selectedAvatar.emoji}</span>
          <span className="avatar-name">{selectedAvatar.name}</span>
        </div>
        <div className="navbar-facts">
          <button 
            className="facts-button"
            onClick={() => setShowUnlockedFacts(!showUnlockedFacts)}
          >
            Faits d√©bloqu√©s ({unlockedFacts.length})
          </button>
        </div>
      </nav>
    );
  };

  const UnlockedFactsPanel: React.FC = () => {
    if (!showUnlockedFacts) return null;

    return (
      <div className="unlocked-facts-panel">
        <h3>Faits d√©bloqu√©s</h3>
        {unlockedFacts.length === 0 ? (
          <p>Tu n'as pas encore d√©bloqu√© de faits. Continue √† jouer !</p>
        ) : (
          <div className="facts-list">
            {unlockedFacts.map(fact => (
              <div key={fact.id} className="fact-item">
                <span className="fact-category">{fact.category}</span>
                <p className="fact-text">{fact.fact}</p>
                <span className="fact-date">
                  {fact.date.toLocaleDateString()}
                </span>
              </div>
            ))}
          </div>
        )}
      </div>
    );
  };

  const getCo2Interpretation = (co2: number) => {
    if (co2 <= 5) return "Excellent ! Ton empreinte carbone est tr√®s faible.";
    if (co2 <= 10) return "Bien ! Tu as une bonne empreinte carbone.";
    if (co2 <= 15) return "Moyen. Il y a encore des progr√®s √† faire.";
    return "√Ä am√©liorer. Ton empreinte carbone est √©lev√©e.";
  };

  if (showAvatarSelection) {
    return (
      <div className="avatar-selection">
        <h2>Choisis ton avatar √©colo !</h2>
        <div className="avatars-container">
          {avatars.map(avatar => (
            <div
              key={avatar.id}
              className="avatar-option"
              onClick={() => handleAvatarSelect(avatar)}
            >
              <span className="avatar-emoji">{avatar.emoji}</span>
              <p>{avatar.name}</p>
            </div>
          ))}
        </div>
      </div>
    );
  }

  return (
    <div className="app-container" style={{ backgroundColor }}>
      <Navbar />
      <UnlockedFactsPanel />
      
      {!selectedCategory ? (
        <div className="intro-screen">
          <h1>Bienvenue jeune √©co-h√©ros ! üåø</h1>
          <p>Le monde a besoin de toi. R√©ponds aux questions pour prouver ta valeur dans cette mission pour la plan√®te.</p>
          <div className="categories">
            {categories.map(category => {
              const isCompleted = completedCategories.includes(category.name);
              return (
                <button
                  key={category.name}
                  onClick={() => !isCompleted && handleCategorySelect(category.name)}
                  style={{ 
                    backgroundColor: category.color,
                    opacity: isCompleted ? 0.5 : 1,
                    cursor: isCompleted ? 'not-allowed' : 'pointer'
                  }}
                  className={`category-button ${isCompleted ? 'completed locked' : ''}`}
                  disabled={isCompleted}
                >
                  {category.name}
                  {isCompleted && (
                    <>
                      <span className="lock-icon">üîí</span>
                      <span className="check-icon">‚úì</span>
                    </>
                  )}
                </button>
              );
            })}
          </div>
        </div>
      ) : quizCompleted ? (
        <div className="results">
          <h2>Quiz termin√© !</h2>
          <div className="badge-display">
            <span className="badge-emoji">{getCurrentBadge().emoji}</span>
            <h3>{getCurrentBadge().name}</h3>
            <p>{getCurrentBadge().message}</p>
          </div>
          <p>Score final : {score}/{questions.length}</p>
          <div className="co2-result">
            <h3>Empreinte carbone</h3>
            <p>Tu as g√©n√©r√© {totalCo2Emission.toFixed(1)} kg de CO‚ÇÇ</p>
            <p className="co2-interpretation">{getCo2Interpretation(totalCo2Emission)}</p>
          </div>
          <div className="share-options">
            <button onClick={generateShareImage} className="share-button">
              T√©l√©charger mon score en image
            </button>
          </div>
          <button onClick={handleRestart} className="restart-button">
            Retour aux cat√©gories
          </button>
          <ShareImage />
        </div>
      ) : (
        <div className="quiz-container">
          <div className="progress">
            Question {currentQuestion + 1}/{questions.length}
          </div>
          <div className="question">
            {questions[currentQuestion]?.type === 'rebus' ? (
              <div className="rebus-container">
                <div className="rebus-emojis">
                  {questions[currentQuestion].emojis?.map((emoji, index) => (
                    <span key={index} className="rebus-emoji">
                      {emoji}
                    </span>
                  ))}
                </div>
                <h2>{questions[currentQuestion].question}</h2>
              </div>
            ) : (
              <h2>{questions[currentQuestion]?.question}</h2>
            )}
            <div className="options">
              {questions[currentQuestion]?.options.map((option, index) => (
                <button
                  key={index}
                  onClick={() => handleAnswerSelect(index)}
                  className={selectedAnswer === index ? "selected" : ""}
                  disabled={selectedAnswer !== null}
                >
                  {option}
                </button>
              ))}
            </div>
          </div>
          {showExplanation && (
            <div className="explanation">
              <h3>Explication :</h3>
              <p>{currentExplanation}</p>
            </div>
          )}
          {showEcoFact && (
            <div className="eco-fact">
              <h3>Le savais-tu ?</h3>
              <p>{currentEcoFact}</p>
            </div>
          )}
          {selectedAnswer !== null && (
            <button onClick={handleNextQuestion} className="next-button">
              {currentQuestion < questions.length - 1 ? "Question suivante" : "Terminer"}
            </button>
          )}
        </div>
      )}
    </div>
  );
};

export default App; 